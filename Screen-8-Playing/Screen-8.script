function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	CurrentScreen = 8
	NextScreen = 2

	self.timer = 0
	
--	go.set_position( vmath.vector3(180, 320+9999, 0), "PauseBG" )

	math.randomseed( os.time() )

	PlayerScreenX = 180

	if (GameMode == 0) then
		msg.post("@system:", "set_update_frequency", { frequency = 30 } )
	elseif (GameMode == 1) then
		msg.post("@system:", "set_update_frequency", { frequency = 60 } )
	elseif (GameMode == 2) then
		msg.post("@system:", "set_update_frequency", { frequency = 45 } )
	end				

	go.set( "#MouseXY", "color", vmath.vector4(0, 0, 0, 1) )	
	go.set( "#MouseXY", "outline", vmath.vector4(1, 1, 1, 1) )	


	for index = 0, 4 do
		EnemyScreenX[index] = 180-70
		EnemyScreenY[index] = 640+100
		go.set_position( vmath.vector3(EnemyScreenX[index], EnemyScreenY[index], 0.4), string.format("Enemy%d", index) )
		go.set(  string.format("/Enemy%d#Enemy", index), "tint", vmath.vector4( math.random(3, 10)/10, math.random(3, 10)/10, math.random(3, 10)/10, 1 )  )		
		EnemyAvailable[index] = true
	end

	EnemyAppears = 0
	
	
	local screenY = 0
	local screenYOffset = (640/5)
	for index = 0, 5 do
		StreetDivider[index] = screenY
		screenY = screenY + screenYOffset
	end

	
	StreetDividerOffset = (640/5)
	StreetDividerOriginalScreenY = StreetDivider[5]

	Collision = false
	ClearedRoad = false
	GameOverTimer = 0
		
	Score = 0
	Level = 0
	Speed = 0

	Minutes = 0
	Seconds = 59
					
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
	msg.post(".", "release_input_focus")

	msg.post("@system:", "set_update_frequency", { frequency = 60 } )
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
	if (DelayAllUserInput > 0) then
		DelayAllUserInput = (DelayAllUserInput - 1)
	end
	
	if (GamePaused == false) then
		go.set( "/PauseBG#PauseBG", "tint", vmath.vector4(1.0, 1.0, 1.0, 1.0) )
		go.set_position( vmath.vector3(180, 320+9999, 1), "PauseBG" )
		go.set_position( vmath.vector3(180, 320+9999, 1), "PauseText" )
	else
		go.set( "/PauseBG#PauseBG", "tint", vmath.vector4(1.0, 1.0, 1.0, 0.8) )
		go.set_position( vmath.vector3(180, 320, 1), "PauseBG" )
		go.set_position( vmath.vector3(180, 320, 1), "PauseText" )
	end

	if (GamePaused == false) then
		if self.timer < 1 then
			self.timer = self.timer + dt
			print(self.timer)
		end
		if self.timer >= 1 then --and not self.timer_flag then
			print("One second has passed!")
			--		self.timer_flag = true
			self.timer = 0
			if (Seconds > 0) then
				Seconds = Seconds - 1
			elseif (Minutes > 0) then
				Minutes = Minutes - 1
				Seconds = 59
			else
				if (GameOverTimer == 0) then
					GameOverTimer = 250
				end
			end

			if (Seconds > 9) then
				label.set_text("#Time", Minutes .. ":" .. Seconds)
			else
				label.set_text("#Time", Minutes .. ":0" .. Seconds)
			end		
		end

		if (GameOverTimer > 0) then
			GameOverTimer = GameOverTimer - 1
			if (GameOverTimer == 1) then
				NextScreen = 5
				ScreenFadeStatus = 1
			end				
		else
			if (Collision == false) then
				if (Speed < 30) then
					Speed = Speed + 0.05
				end
				
				for index = 0, 5 do
					StreetDivider[index] = StreetDivider[index] - (1 * Speed)
				end

				EnemyAppears = EnemyAppears + Speed
				if (EnemyAppears > 3000) then
					for index = 0, 4 do
						if (EnemyAvailable[index] == true) then
							local side = math.random(0, 1)
							if (side == 0) then
								EnemyScreenX[index] = 180-70
							elseif (side == 1) then
								EnemyScreenX[index] = 180+70
							end
								
							EnemyScreenY[index] = 640+100
							go.set_position( vmath.vector3(EnemyScreenX[index], EnemyScreenY[index], 0.4), string.format("Enemy%d", index) )
							go.set(  string.format("/Enemy%d#Enemy", index), "tint", vmath.vector4( math.random(3, 10)/10, math.random(3, 10)/10, math.random(3, 10)/10, 1 )  )		
							EnemyAvailable[index] = false
							EnemyAppears = 0
							break
						end
					end	
				end

				for index = 0, 4 do
					if (EnemyAvailable[index] == false) then
						EnemyScreenY[index] = EnemyScreenY[index] - 5
						go.set_position( vmath.vector3(EnemyScreenX[index], EnemyScreenY[index], 0.4), string.format("Enemy%d", index) )

						if (EnemyScreenY[index] < -100) then
							EnemyAvailable[index] = true
						end
					end
				end

				go.set_position( vmath.vector3(180, StreetDivider[0], 0.3), "Street_Divider_01" )
				go.set_position( vmath.vector3(180, StreetDivider[1], 0.3), "Street_Divider_011" )
				go.set_position( vmath.vector3(180, StreetDivider[2], 0.3), "Street_Divider_012" )
				go.set_position( vmath.vector3(180, StreetDivider[3], 0.3), "Street_Divider_013" )
				go.set_position( vmath.vector3(180, StreetDivider[4], 0.3), "Street_Divider_014" )
				go.set_position( vmath.vector3(180, StreetDivider[5], 0.3), "Street_Divider_015" )

				if ( StreetDivider[5] < (StreetDividerOriginalScreenY - StreetDividerOffset) ) then
					local screenY = 0
					local screenYOffset = (640/5)
					for index = 0, 5 do
						StreetDivider[index] = screenY
						screenY = screenY + screenYOffset
					end

					go.set_position( vmath.vector3(180, StreetDivider[0], 0.4), "Street_Divider_01" )
					go.set_position( vmath.vector3(180, StreetDivider[1], 0.4), "Street_Divider_011" )
					go.set_position( vmath.vector3(180, StreetDivider[2], 0.4), "Street_Divider_012" )
					go.set_position( vmath.vector3(180, StreetDivider[3], 0.4), "Street_Divider_013" )
					go.set_position( vmath.vector3(180, StreetDivider[4], 0.4), "Street_Divider_014" )
					go.set_position( vmath.vector3(180, StreetDivider[5], 0.4), "Street_Divider_015" )

					StreetDividerOffset = (640/5)
					StreetDividerOriginalScreenY = StreetDivider[5]
				end

				if (PlayerDirection == -1) then
					if (PlayerScreenX > 80) then
						PlayerScreenX = PlayerScreenX - 5
					end
				else
					if (PlayerScreenX < 360-80) then
						PlayerScreenX = PlayerScreenX + 5
					end
				end

				PlayerDirection = 1
				
				go.set_position( vmath.vector3(PlayerScreenX, PlayerScreenY, 0.5), "Player" )
				
				for index = 0, 4  do
					if (EnemyAvailable[index] == false) then
						if ( (PlayerScreenX > EnemyScreenX[index]-100*0.9) and (PlayerScreenX < EnemyScreenX[index]+100*0.9) and (PlayerScreenY > EnemyScreenY[index]-203*0.9) and (PlayerScreenY < EnemyScreenY[index]+203*0.9) ) then
							Collision = true
							ClearedRoad = false
							msg.post("level:/Audio#CarHorn", "play_sound", {delay = 0, gain = EffectsVolume})
						end
					end
				end
			elseif (Collision == true) then
				Speed = 0

				if (ClearedRoad == false) then
					ClearedRoad = true
					for index = 0, 4 do
						if (EnemyAvailable[index] == false) then
							ClearedRoad = false
							EnemyScreenY[index] = EnemyScreenY[index] + 30
							go.set_position( vmath.vector3(EnemyScreenX[index], EnemyScreenY[index], 0.4), string.format("Enemy%d", index) )

							if (EnemyScreenY[index] > 640+100) then
								EnemyAvailable[index] = true
							end
						end
					end
				end

				if (ClearedRoad == true) then
					Collision = false
				end
			end
		end
	end
					
	local m = require "data/modules.FPSandMouseXY"
	m.UpdateFPSandMouseXY(dt)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed

	mX = action.screen_x
	mY = action.screen_y	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
