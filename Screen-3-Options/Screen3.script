function init(self)
	-- Add initialization code here
	-- Remove this function if not needed

	CurrentScreen = 3
	NextScreen = 2
	
	ScreenFadeStatus = 0
	ScreenFadeAlpha = 1
		
	label.set_text("#ScreenHeader", "OPTIONS")

	ButtonSelectedByKeyboard = 0
	
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed

	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed

	FPS_FrameCount = (FPS_FrameCount + 1)
	local currentTime = socket.gettime()
	if ( currentTime > (FPS_LastSecond + 1) ) then
		FPS_TenSeconds[FPS_CurrentSecond] = FPS_FrameCount
		if (FPS_CurrentSecond < 10) then
			FPS_CurrentSecond = (FPS_CurrentSecond + 1)
		else
			FPS_CurrentSecond = 0
		end

		for index = 0, 10 do
			FPS_Average = (FPS_Average + FPS_TenSeconds[index])
		end

		FPS_Average = (FPS_Average / 12)
		FPS_Average = math.floor(FPS_Average)

		FPS_LastSecond = socket.gettime()
		FPS_FrameCount = 0
	end
	
	label.set_text(   "#MouseXY", "FPS=" .. tostring(FPS_Average) .. " [" .. tostring(  math.floor( mX * (360/WindowWidthTrue) )  ) .. "," .. tostring(  math.floor( mY * (640/WindowHeightTrue) )  ) .. "]"   )
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed

	mX = action.screen_x
	mY = action.screen_y	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
