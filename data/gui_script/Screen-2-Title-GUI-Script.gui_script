function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#", "show_level_select")
	self.active = false

	if (Platform == Platform_HTMLfive) then
		gui.set_adjust_mode( gui.get_node("ButtonSTART"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonOptions"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonHowToPlay"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonHighScores"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonAbout"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonExit"), gui.ADJUST_FIT )
		
		gui.set_adjust_mode( gui.get_node("ButtonSelectorLeft"), gui.ADJUST_FIT )
		gui.set_adjust_mode( gui.get_node("ButtonSelectorRight"), gui.ADJUST_FIT )	

		gui.set_adjust_mode( gui.get_node("SpeakerON"), gui.ADJUST_FIT )

		gui.set_adjust_mode( gui.get_node("Play"), gui.ADJUST_FIT )
	end

	if (MusicVolume == 0 and EffectsVolume == 0) then
		gui.set_texture( gui.get_node("SpeakerON"), "SpeakerOFF" )
	else
		gui.set_texture( gui.get_node("SpeakerON"), "SpeakerON" )
	end

	if ( (SecretCode[0] ~= 5 or SecretCode[1] ~= 4 or SecretCode[2] ~= 3 or SecretCode[3] ~= 2) and (SecretCode[0] ~= 5 or SecretCode[1] ~= 4 or SecretCode[2] ~= 3 or SecretCode[3] ~= 1) ) then
		gui.set_position(  gui.get_node("Play"), vmath.vector3( -999, -999, 1 )  )
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show_level_select") then
		msg.post("#", "enable")
		self.active = true
	elseif message_id == hash("hide_level_select") then
		msg.post("#", "disable")
		self.active = false
	end
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
	
	if (DelayAllUserInput == 10) then
		gui.set_scale( gui.get_node("SpeakerON"), vmath.vector3(1, 1, 1) )
	end	
	
	if (Platform == Platform_Android or Platform == Platform_iOS) then
		gui.set_position(  gui.get_node("ButtonSelectorLeft"), vmath.vector3( -999, -999, 1 )  )
		gui.set_position(  gui.get_node("ButtonSelectorRight"), vmath.vector3( -999, -999, 1 )  )
	end			
end

function on_input(self, action_id, action)
	local node
	local info
	local leftArrow
	local rightArrow
	
	if ( DelayAllUserInput == 0 and action_id == hash("EnterGUI") ) then
		if (ButtonSelectedByKeyboard == 0) then
			node = gui.get_node("ButtonSTART")
		elseif (ButtonSelectedByKeyboard == 1) then
			node = gui.get_node("ButtonOptions")
		elseif (ButtonSelectedByKeyboard == 2) then
			node = gui.get_node("ButtonHowToPlay")
		elseif (ButtonSelectedByKeyboard == 3) then
			node = gui.get_node("ButtonHighScores")
		elseif (ButtonSelectedByKeyboard == 4) then
			node = gui.get_node("ButtonAbout")
		elseif (ButtonSelectedByKeyboard == 5) then
			node = gui.get_node("ButtonExit")
		end								
			
		if (ScreenFadeStatus == 0) then
			gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

			msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
							
			if (ButtonSelectedByKeyboard == 0) then
				NextScreen = 9--2
			else
				NextScreen = (ButtonSelectedByKeyboard + 2)
			end

			if (ButtonSelectedByKeyboard < 5) then
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
			else
--				info = sys.get_sys_info()
				if (Platform == Platform_HTMLfive) then
					sys.open_url("http://www.fallenangelsoftware.com")
				else
					msg.post("@system:", "exit", {code = 0})
				end
			end

			ButtonClicked = node
			ScreenFadeAlphaHalf = 0.5

			DelayAllUserInput = 30
		end
	elseif ( DelayAllUserInput == 0 and action_id == hash("UP") ) then
		if (ButtonSelectedByKeyboard > 0) then
			ButtonSelectedByKeyboard = (ButtonSelectedByKeyboard - 1)
		else
			ButtonSelectedByKeyboard = 5
		end

		DelayAllUserInput = 15

		msg.post("level:/Audio#MenuMove", "play_sound", {delay = 0, gain = EffectsVolume})
								
		leftArrow = gui.get_node("ButtonSelectorLeft")
		gui.set_position(  leftArrow, vmath.vector3( 30, 430-(ButtonSelectedByKeyboard*50), 1 )  )
		rightArrow = gui.get_node("ButtonSelectorRight")
		gui.set_position(  rightArrow, vmath.vector3( 330, 430-(ButtonSelectedByKeyboard*50), 1 )  )
	elseif ( DelayAllUserInput == 0 and action_id == hash("DOWN") ) then
		if (ButtonSelectedByKeyboard < 5) then
			ButtonSelectedByKeyboard = (ButtonSelectedByKeyboard + 1)
		else
			ButtonSelectedByKeyboard = 0
		end

		DelayAllUserInput = 15

		msg.post("level:/Audio#MenuMove", "play_sound", {delay = 0, gain = EffectsVolume})
								
		leftArrow = gui.get_node("ButtonSelectorLeft")
		gui.set_position(  leftArrow, vmath.vector3( 30, 430-(ButtonSelectedByKeyboard*50), 1 )  )
		rightArrow = gui.get_node("ButtonSelectorRight")
		gui.set_position(  rightArrow, vmath.vector3( 330, 430-(ButtonSelectedByKeyboard*50), 1 )  )
	end

	if action_id == hash("ClickGUI") then
		node = gui.get_node("ButtonSTART")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
				
				NextScreen = 9
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0

				ButtonSelectedByKeyboard = 0

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end
		
		node = gui.get_node("ButtonOptions")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
								
				NextScreen = 3
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
				
				ButtonSelectedByKeyboard = 1
											
				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end
		
		node = gui.get_node("ButtonHowToPlay")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
								
				NextScreen = 4
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
				
				ButtonSelectedByKeyboard = 2

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end

		node = gui.get_node("ButtonHighScores")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
								
				NextScreen = 5
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
				
				ButtonSelectedByKeyboard = 3

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end

		node = gui.get_node("ButtonAbout")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
								
				NextScreen = 6
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
				
				ButtonSelectedByKeyboard = 4

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end

		node = gui.get_node("ButtonExit")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeStatus == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
								
				NextScreen = 2
				ScreenFadeStatus = 1
				ScreenFadeAlpha = 0
				
				ButtonSelectedByKeyboard = 5

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
				
--				info = sys.get_sys_info()
				if (Platform == Platform_HTMLfive) then
					sys.open_url("http://www.fallenangelsoftware.com")
				else
					msg.post("@system:", "exit", {code = 0})
				end
			end
		end
		
		node = gui.get_node("SpeakerON")
		if (DelayAllUserInput == 0) then
			if gui.pick_node(node, action.x, action.y) then
				if (ScreenFadeStatus == 0) then
					gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

					msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

					if (MusicVolume == 0 and EffectsVolume == 0) then
						MusicVolume = 1
						EffectsVolume = 1
						gui.set_texture(node, "SpeakerON")
					else
						MusicVolume = 0
						EffectsVolume = 0
						gui.set_texture(node, "SpeakerOFF")
					end
					
					sound.set_group_gain("music", MusicVolume)
					sound.set_group_gain("effects", EffectsVolume)

					DelayAllUserInput = 20
				end
			end
		end

		node = gui.get_node("Play")
		if (DelayAllUserInput == 0) then
			if gui.pick_node(node, action.x, action.y) then
				if (ScreenFadeStatus == 0) then
					gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

					msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

					if (MusicVolume == 0) then
						MusicVolume = 1
						EffectsVolume = 1
						gui.set_texture(node, "SpeakerON")
					end

					sound.set_group_gain("music", MusicVolume)
					sound.set_group_gain("effects", EffectsVolume)

					MusicTestBGM = 0
										
					NextScreen = 7
					ScreenFadeStatus = 1
					ScreenFadeAlpha = 0

--					ButtonSelectedByKeyboard = 5

					ButtonClicked = node
					ScreenFadeAlphaHalf = 0.5
					
					DelayAllUserInput = 20
				end
			end
		end
								
		leftArrow = gui.get_node("ButtonSelectorLeft")
		gui.set_position(  leftArrow, vmath.vector3( 30, 430-(ButtonSelectedByKeyboard*50), 1 )  )
		rightArrow = gui.get_node("ButtonSelectorRight")
		gui.set_position(  rightArrow, vmath.vector3( 330, 430-(ButtonSelectedByKeyboard*50), 1 )  )
	end
end
