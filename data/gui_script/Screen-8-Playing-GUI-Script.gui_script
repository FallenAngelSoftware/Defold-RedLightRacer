function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#", "show_level_select")
	self.active = false

	local PM = require "data/modules.PlayMusic"
	gui.set_position( gui.get_node("Pause"), vmath.vector3(360-15, 625, 0.5) )
	gui.set_position( gui.get_node("SpeakerON"), vmath.vector3(15, 625, 0.5) )

	if (MusicVolume == 0 and EffectsVolume == 0) then
		gui.set_texture( gui.get_node("SpeakerON"), "SpeakerOFF" )
	else
		gui.set_texture( gui.get_node("SpeakerON"), "SpeakerON" )
	end

	gui.set_position( gui.get_node("Exit"), vmath.vector3(0, 9999, 0.5) )
	GamePaused = false
end

function final(self)
--	local PM = require "data/modules.PlayMusic"
--	PM.PlayMusic(0)
end

function update(self, dt)
	if (DelayAllUserInput == 5) then
		gui.set_scale( gui.get_node("SpeakerON"), vmath.vector3(1, 1, 1) )
		gui.set_scale( gui.get_node("Pause"), vmath.vector3(1, 1, 1) )
		gui.set_scale( gui.get_node("Exit"), vmath.vector3(1, 1, 1) )
	end

	if (GamePaused == false) then
		gui.set_position( gui.get_node("Exit"), vmath.vector3(180, 9999, 0.5) )
	else
		local showExitIcon = true
		if (SecretCode[0] == 9 and SecretCode[1] == 8 and SecretCode[2] == 7 and SecretCode[3] == 6) then
			showExitIcon = false
		end
		
		if (showExitIcon == true) then
			gui.set_position( gui.get_node("Exit"), vmath.vector3(180, 96, 0.5) )
		end
	end
end
	
function on_message(self, message_id, message, sender)
	if message_id == hash("show_level_select") then
		msg.post("#", "enable")
		self.active = true
	elseif message_id == hash("hide_level_select") then
		msg.post("#", "disable")
		self.active = false
	end
end

function on_input(self, action_id, action)
	local PM = require "data/modules.PlayMusic"
	
	if action_id == hash("KeyEscape") and action.pressed and self.active then
		msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
		PM.PlayMusic(0)
		Score = 0
		NextScreen = 2
		ScreenFadeStatus = 1
	end

	if action_id == hash("ClickGUI") then
		PlayerDirection = -1
	else
		PlayerDirections = 1
	end

	if (GameOverTimer == 0) then
		if action_id == hash("ClickGUI") then
			node = gui.get_node("SpeakerON")
			if (DelayAllUserInput == 0) then
				if gui.pick_node(node, action.x, action.y) then
					if (ScreenFadeStatus == 0) then
						gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

						msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

						if (MusicVolume == 0 and EffectsVolume == 0) then
							MusicVolume = 1
							EffectsVolume = 1
							gui.set_texture(node, "SpeakerON")
						else
							MusicVolume = 0
							EffectsVolume = 0
							gui.set_texture(node, "SpeakerOFF")
						end

						sound.set_group_gain("music", MusicVolume)
						sound.set_group_gain("effects", EffectsVolume)
						PM.PlayMusic(2)
						DelayAllUserInput = 20
					end
				end
			end
		end

		if action_id == hash("ClickGUI") then
			node = gui.get_node("Pause")
			if (DelayAllUserInput == 0) then
				if gui.pick_node(node, action.x, action.y) then
					if (ScreenFadeStatus == 0) then
						gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )
						msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

						if (GamePaused == false) then
							GamePaused = true
							gui.set_texture(node, "Play")
						else
							GamePaused = false
							gui.set_texture(node, "Pause")
						end

						DelayAllUserInput = 20
					end
				end
			end
		end

		if action_id == hash("ClickGUI") then
			node = gui.get_node("Exit")
			if (DelayAllUserInput == 0) then
				if gui.pick_node(node, action.x, action.y) then
					if (ScreenFadeStatus == 0) then
						gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )
						msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
						msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
						PM.PlayMusic(0)
						Score = 0
						NextScreen = 2
						ScreenFadeStatus = 1
						DelayAllUserInput = 20
					end
				end
			end
		end
	end
end

function on_reload(self)
end