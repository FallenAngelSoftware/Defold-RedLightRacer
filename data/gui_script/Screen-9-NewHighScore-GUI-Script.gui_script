function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	msg.post("#", "show_level_select")
	self.active = false

	label.set_text("#ScreenHeader", "NEW HIGH SCORE")

	NewHighScoreName = ""
	NewHighScoreNameIndex = 0
	
	label.set_text("#NewHighScoreName", "")
	
	screenX = 18
	screenY = 450-40
	for n = 0, 64 do
		gui.set_position(  gui.get_node( string.format("Char%d", n) ), vmath.vector3(screenX, screenY, 1)  )

		if (n < 26) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), string.format("%c", 65+n)  )
		elseif (n < 52) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), string.format("%c", 97+n-26)  )
		elseif (n < 52+10) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), string.format("%c", 48+n-52)  )
		elseif (n == 62) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), "+"  )
		elseif (n == 63) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), "_"  )
		elseif (n == 64) then
			gui.set_text(  gui.get_node( string.format("Char_Text%d", n) ), "<"  )
		end
		
		screenX = screenX + 27
		if ( screenX >= (13*27) ) then
			screenY = screenY - 65
			screenX = 18
		end
	end
		
	if (Platform == Platform_HTMLfive) then
		gui.set_adjust_mode( gui.get_node("ButtonExit"), gui.ADJUST_FIT )

		for n = 0, 64 do
			gui.set_adjust_mode(  gui.get_node( string.format("Char%d", n) ), gui.ADJUST_FIT  )
		end
			
	end
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed

	if (DelayAllUserInput == 5) then
		for index = 0, 64 do
			gui.set_scale( gui.get_node( string.format("Char%d", index) ), vmath.vector3(1, 1, 1) )
		end
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	if message_id == hash("show_level_select") then
		msg.post("#", "enable")
		self.active = true
	elseif message_id == hash("hide_level_select") then
		msg.post("#", "disable")
		self.active = false
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
	local m = require "data/modules.StopMusic"
	local mTwo = require "data/modules.PlayMusic"

	local node

	if action_id == hash("EnterGUI") then
		if (ButtonSelectedByKeyboard == 0) then
			node = gui.get_node("ButtonExit")
		end

		if (ScreenFadeAlpha == 0) then
			gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

			msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

			m.StopMusic(CurrentMusicPlaying)--MusicTestBGM)

			msg.post("level:/Audio#Title-BGM", "play_sound", {delay = 0, gain = 1})
			
			NextScreen = 5

			ScreenFadeStatus = 1

			ButtonClicked = node
			ScreenFadeAlphaHalf = 0.5
		end
	end

	ButtonClicked = -1

	if action_id == hash("ClickGUI") and action.pressed and self.active then
		node = gui.get_node("ButtonExit")
		if gui.pick_node(node, action.x, action.y) then
			if (ScreenFadeAlpha == 0) then
				gui.set_scale( node, vmath.vector3(0.85, 0.85, 1) )

				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

				m.StopMusic(CurrentMusicPlaying)--MusicTestBGM)

				msg.post("level:/Audio#Title-BGM", "play_sound", {delay = 0, gain = MusicVolume})

				NextScreen = 5
				ScreenFadeStatus = 1

				ButtonClicked = node
				ScreenFadeAlphaHalf = 0.5
			end
		end
	end

	if action_id == hash("ClickGUI") and action.pressed and self.active then
		for index = 0, 64 do
			node = gui.get_node( string.format("Char%d", index) )--gui.get_node("Char0")
			if gui.pick_node(node, action.x, action.y) then
				if (ScreenFadeAlpha == 0) then
					gui.set_scale( node, vmath.vector3(0.75, 0.75, 1) )

					msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})

					if (NewHighScoreNameIndex < 13) then
						if (index < 26) then
							NewHighScoreName = NewHighScoreName .. string.format("%c", 65+index)
							NewHighScoreNameIndex = NewHighScoreNameIndex + 1
						elseif (index < 52) then
							NewHighScoreName = NewHighScoreName .. string.format("%c", 97+index-26)
							NewHighScoreNameIndex = NewHighScoreNameIndex + 1
						elseif (index < 52+10) then
							NewHighScoreName = NewHighScoreName .. string.format("%c", 48+index-52)
							NewHighScoreNameIndex = NewHighScoreNameIndex + 1
						elseif (index == 62) then
							NewHighScoreName = NewHighScoreName .. "+"
							NewHighScoreNameIndex = NewHighScoreNameIndex + 1
						elseif (index == 63) then
							NewHighScoreName = NewHighScoreName .. " "
							NewHighScoreNameIndex = NewHighScoreNameIndex + 1
						end
					end

					if (index == 64 and NewHighScoreNameIndex > 0) then
						NewHighScoreName = NewHighScoreName:sub(1, -2)
						NewHighScoreNameIndex = NewHighScoreNameIndex - 1
					end						
					
					label.set_text("#NewHighScoreName", NewHighScoreName)
					
					DelayAllUserInput = 10
				end
			end
		end
	end

	if (ScreenFadeAlpha == 0 and DelayAllUserInput == 0) then
		if action_id == hash("Key63") then
			if (NewHighScoreNameIndex < 13) then
				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
				node = gui.get_node( string.format("Char%d", 63) )
				gui.set_scale( node, vmath.vector3(0.75, 0.75, 1) )
				NewHighScoreName = NewHighScoreName .. " "
				NewHighScoreNameIndex = NewHighScoreNameIndex + 1
				label.set_text("#NewHighScoreName", NewHighScoreName)
				DelayAllUserInput = 10							
			end
		elseif action_id == hash("type") then
			if (NewHighScoreNameIndex < 13) then
				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
				for index = 0, 64 do
					character = gui.get_text(  gui.get_node( string.format("Char_Text%d", index) )  )
					if (character == action.text) then
						node = gui.get_node( string.format("Char%d", index) )
						gui.set_scale( node, vmath.vector3(0.75, 0.75, 1) )
					elseif (character == "_" and action.text == " ") then
						node = gui.get_node( string.format("Char%d", index) )
						gui.set_scale( node, vmath.vector3(0.75, 0.75, 1) )
					end
				end

				print("Char: ''" .. action.text .. "''")
								
				NewHighScoreName = NewHighScoreName .. action.text
				NewHighScoreNameIndex = NewHighScoreNameIndex + 1
				label.set_text("#NewHighScoreName", NewHighScoreName)
				DelayAllUserInput = 10							
			end
		elseif action_id == hash("backspace") and action.repeated then
			local l = string.len(NewHighScoreName)
			if (NewHighScoreNameIndex > 0) then			
				msg.post("level:/Audio#MenuClick", "play_sound", {delay = 0, gain = EffectsVolume})
				node = gui.get_node( string.format("Char%d", 64) )
				gui.set_scale( node, vmath.vector3(0.75, 0.75, 1) )
				NewHighScoreName = string.sub(NewHighScoreName, 0, l-1) 
				label.set_text("#NewHighScoreName", NewHighScoreName)
				NewHighScoreNameIndex = NewHighScoreNameIndex - 1
				DelayAllUserInput = 10
			end
		end
	end		
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
